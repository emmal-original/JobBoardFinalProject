@*@model IEnumerable<JobBoardFinalProject.DATA.EF.OpenPosition>*@
@model PagedList.IPagedList<JobBoardFinalProject.DATA.EF.OpenPosition>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Open Positions";
}

<h2>@ViewBag.Title</h2>

<p>
    @Html.ActionLink("Toggle List View", "Index", "OpenPositions", new { @class = "button" })
    @*@Html.ActionLink("Toggle List View", "Index", "OpenPositions", protocol: null, hostName: null, fragment: "startTiles", routeValues: null, htmlAttributes: null)*@
    @using (Html.BeginForm("IndexTile", "OpenPositions", FormMethod.Get))
    {
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
    }
    <div class="row">
        @foreach (var item in Model)
        {
            <div class="col-md-4">
                <div class="card mx-1 my-2 text-center">
                    <div class="card-body">
                        <h3 class="card-title pb-1">
                            <a href="@Url.Action("Details", new { id = item.OpenPositionId })" class="m-auto">@Html.DisplayFor(modelItem => item.Position.Title)</a>
                            @*@Html.ActionLink("Details", "Details", new { id = item.OpenPositionId }, new { @class = "card-link" })*@
                        </h3>
                        <h4 class="card-subtitle m-bottom-20 text-muted">
                            @Html.DisplayFor(modelItem => item.Position.Department.DepartmentName)
                        </h4>
                        <p class="card-text">
                            @Html.DisplayFor(modelItem => item.Location.City)
                            @Html.Raw(", ")
                            @Html.DisplayFor(modelItem => item.Location.State)
                            <br>
                            Posting Date: @Html.DisplayFor(modelitem => item.PostingDate)
                        </p>
                        @Html.ActionLink("Details", "Details", new { id = item.OpenPositionId, previousView = "Tile" }, new { @class = "card-link" })
                        <div>

                            @{ bool hasApplied = false; }

                            @foreach (var x in ViewBag.PositionsAppliedFor)
                            {

                                if (x == item.OpenPositionId)
                                {
                                    hasApplied = true;
                                }
                            }
                            @if (hasApplied == true)
                            {
                                <span class="btn btn-default">Applied</span>
                            }
                            else
                            {
                                @Html.ActionLink("Apply", "Apply", "OpenPositions", new { id = item.OpenPositionId }@*, new { @class = "btn btn-default" }*@)

                            }

                            @*@Html.ActionLink("Apply", "Apply", "OpenPositions", new { id = item.OpenPositionId }, new { @class = " button" })*@
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    
    <div class="m-auto">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        @Html.PagedListPager(Model, page => Url.Action("IndexTile", new { page }))
    </div>
