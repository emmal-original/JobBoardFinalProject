@model JobBoardFinalProject.UI.MVC.Models.ContactViewModel

@{
    ViewBag.Title = "Contact Me";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<form action="#" method="get" onsubmit="validateForm(event)">*@
        <form id="myForm">
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Send Message" class="btn btn-default" onclick="Contact()" />
                </div>
            </div>

        </form>

        @*</form>*@
    </div>


    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")

        @*Client-side form validation in progress*@
        <script>
            //alert("jQuery is working")

            //var Contact = function () {
            //    //debugger
            //    //var data = $("#myForm").serialize();

            //    var Name = $("#Name").val();
            //    var Email = $("#Email").val();
            //    var Message = $("#Message").val();

            //    if (Name == "" || Name == undefined) {

            //        alert("Please enter Name")
            //        return false;
            //    }

            //    if (Email == "" || Email == undefined) {

            //        alert("Please enter Email")
            //        return false;
            //    }

            //    if (Message == "" || Message == undefined) {

            //        alert("Please enter Message")
            //        return false;
            //    }


            //}

            @*var model = @Html.Raw(Json.Encode(Model));

            console.log("JavaScript is firing")

            let controls = document.getElementsByClassName('form-control');

            console.log(controls);

            let validationMessages = document.getElementsByClassName("text-danger");
            console.log(validationMessages);

            if (controls[""].value.length == 0) {

                event.preventDefault();

                if (controls["@Model.Name.ToString()"].value.length == 0) {
                    validationMessages["rfvName"].textContent = "* Name is required";
                }
                else {
                    validationMessages["rfvName"].textContent = "";
                }

            }*@


        </script>


    }
}
